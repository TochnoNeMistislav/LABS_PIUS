openapi: "3.0.0"
info:
  description: ""
  version: "1.2b23f"
  title: "REST API LAB3"
tags:
- name: "Customer Endpoints"
- name: "Employee Endpoints"
- name: "Order Endpoints"
paths:
  /api/ApiV1/Customer:
    post:
      tags:
      - "Customer Endpoints"
      summary: Create customer
      description: Creates customer
      operationId: postCustomer
      requestBody:
        description: Simple customer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    get:
      tags:
      - "Customer Endpoints"
      summary: "Show all customers"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/ApiV1/Customer/{id}:
    get:
      tags:
      - "Customer Endpoints"
      summary: "Show {id} customer"
      operationId: "getCustomer"
      parameters:
        - in: path
          name: "id"
          description: "Identifier for customer to get"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
      - "Customer Endpoints"
      summary: "Delete {id} customer"
      parameters:
        - in: path
          name: "id"
          description: "Identifier for custumer to delete"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
      - "Customer Endpoints"
      summary: Update all fields {id} customer
      parameters:
        - in: path
          name: "id"
          description: "Identifier for customer to put"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: "string"
                addres:
                  type: "string"
                phone:
                  type: "string"
                FAX:
                  type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      tags:
      - "Customer Endpoints"
      summary: Update one field {id} customer
      parameters:
        - in: path
          name: "id"
          description: "Identifier for customer to put"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: "name"
          schema:
            type: "string"
        - in: query
          name: "addres"
          schema:
            type: "string"
        - in: query
          name: "phone"
          schema:
            type: "string"
        - in: query
          name: "FAX"
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/ApiV1/Employee:
    post:
      tags:
      - "Employee Endpoints"
      summary: Create employee
      description: Creates employee
      operationId: postEmployee
      requestBody:
        description: Simple employee
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    get:
      tags:
      - "Employee Endpoints"
      summary: "Show all employees"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/ApiV1/Employee/{id}:
    get:
      tags:
      - "Employee Endpoints"
      summary: Show {id} employee
      parameters:
        - in: path
          name: "id"
          description: "Identifier for employee to get"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
      - "Employee Endpoints"
      summary: Delete {id} employee
      parameters:
        - in: path
          name: "id"
          description: "Identifier for employee to delete"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
      - "Employee Endpoints"
      summary: Update all fields {id} employee
      parameters:
        - in: path
          name: "id"
          description: "Identifier for employee to put"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: "string"
                lastname:
                  type: "string"
                phone:
                  type: "string"
                salary:
                  type: "number"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'
    patch:
      tags:
      - "Employee Endpoints"
      summary: Update one field {id} employee
      parameters:
        - in: path
          name: "id"
          description: "Identifier for employee to put"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: "firstname"
          schema:
            type: "string"
        - in: query
          name: "lastname"
          schema:
            type: "string"
        - in: query
          name: "phone"
          schema:
            type: "string"
        - in: query
          name: "salary"
          schema:
            type: "number"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/ApiV1/Order:
    post:
      tags:
      - "Order Endpoints"
      summary: Create order
      description: Creates customer
      operationId: postOrder
      requestBody:
        description: Simple order
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    get:
      tags:
      - "Order Endpoints"
      summary: "Show all orders"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/ApiV1/Order/{id}:
    get:
      tags:
      - "Order Endpoints"
      summary: "Show {id} order"
      parameters:
        - in: path
          name: "id"
          description: "Identifier for order to get"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
      - "Order Endpoints"
      summary: "Delete {id} order"
      parameters:
        - in: path
          name: "id"
          description: "Identifier for order to delete"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
      - "Order Endpoints"
      summary: "Update all fields {id} order"
      parameters:
        - in: path
          name: "id"
          description: "Identifier for order to put"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                customer_id:
                  type: integer
                description:
                  type: string
                ship_to_date:
                  type: string
                  format: date
                addres:
                  type: string
                amount_paid:
                  type: number
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      tags:
      - "Order Endpoints"
      summary: "Update one field {id} order"
      parameters:
        - in: path
          name: "id"
          description: "Identifier for order to put"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: employee_id
          schema:
            type: integer
        - in: query
          name: customer_id
          schema:
            type: integer
        - in: query
          name: description
          schema:
            type: string
        - in: query
          name: ship_to_date
          schema:
            type: string
            format: date
        - in: query
          name: addres
          schema:
            type: string
        - in: query
          name: amount_paid
          schema:
            type: number
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas: 
    Customer:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
        addres:
          type: string
        phone:
          type: string
        FAX:
          type: string
    Order:
      type: object
      properties:
        id: 
          type: integer
        employee_id:
          type: integer
        customer_id:
          type: integer
        description:
          type: string
        ship_to_date:
          type: string
          format: date
        addres:
          type: string
        amount_paid:
          type: number
    Employee:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        salary:
          type: number
    Response:
      type: object
      properties:
        data:
          oneOf:
            - type: object
              nullable: true
            - type: array
              items:
                type: object
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                $ref: '#/components/schemas/Code'
              message:
                type: string
              meta:
                type: object
        meta: 
          type: object
    Code:
      type: string
      enum: [200, 400, 401, 403, 404, 500]
